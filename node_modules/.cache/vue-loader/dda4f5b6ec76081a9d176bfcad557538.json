{"remainingRequest":"/Users/mannyfavela/OneDrive/MIT/Thesis Work/mfavela_activation_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mannyfavela/OneDrive/MIT/Thesis Work/mfavela_activation_project/src/components/MapActivation.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mannyfavela/OneDrive/MIT/Thesis Work/mfavela_activation_project/src/components/MapActivation.vue","mtime":1639774917646},{"path":"/Users/mannyfavela/OneDrive/MIT/Thesis Work/mfavela_activation_project/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mannyfavela/OneDrive/MIT/Thesis Work/mfavela_activation_project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mannyfavela/OneDrive/MIT/Thesis Work/mfavela_activation_project/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mannyfavela/OneDrive/MIT/Thesis Work/mfavela_activation_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mannyfavela/OneDrive/MIT/Thesis Work/mfavela_activation_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFubm90YXRvcl9pbWFnZV9zbWFsbCB7CiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDsKICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDsKICBtYXgtaGVpZ2h0OiAyMDBweDsKICAvKm1heC13aWR0aDogNDAwcHg7ICovCiAgb2JqZWN0LWZpdDogc2NhbGUtZG93bjsgLyogbmV2ZXIgcmVzY2FsZSB1cCAqLyAKfQo="},{"version":3,"sources":["MapActivation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MapActivation.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n      <h2>Map Activation Component</h2>\n      <img :class=\"annotator_image_small\" :src=\"image\" ref=\"image\" \n                @load=\"draw_initial_contents\" tabindex='1' @keyup.esc=\"emit('esc')\" />\n        <canvas class=\"annotator_canvas\" ref=\"canvas\" @keyup.esc=\"emit('esc')\" tabindex='2' \n                @mouseover=\"hover(true)\" @mouseleave=\"hover(false)\" />\n  </div>\n</template>\n\n<script>\n//import axios from \"axios\";\n//import { eventBus } from \"../main\";\n\nexport default {\n  name: \"MapActivation\",\n  props: [\"image\", \"array\", \"showActivation\"],\n  data() {\n    return {};\n  },\n  created: function() {\n      //var canvas = document.createElement(\"canvas\"); \n      //var ctx = canvas.getContext(\"2d\");\n      //this.show_image(this.image, 300, 250, \"Test Image\", ctx); \n      //this.imageMaker([[.45, 1],[.4,.2]], canvas, ctx); \n      \n  },\n  methods: {\n    show_image(src, width, height, alt) {\n        var img = document.createElement(\"img\");\n        img.src = src;\n        img.width = width;\n        img.height = height;\n        img.alt = alt;\n\n        // This next line will just add it to the <body> tag\n        // but you can adapt to make it append to the element you want.\n        //ctx.drawImage(img, 0, 0); \n        document.body.appendChild(img);\n    }, \n    draw_initial_contents(){\n\n    }, \n    imageMaker(array, canvas, ctx){\n        var width = 300, \n        height = 250, \n        array_width = array[0].length, \n        array_height = array.length; \n        var imgData = ctx.getImageData(0,0,width,height); \n        //var imgData = document.createElement(\"data\");\n        var data = imgData.data; \n        for (var x = 0; x < width; x++){\n            for (var y = 0; y < height; y++){\n                var pos = (y * width + x) * 4; \n                var array_x = Math.floor(width / array_width); \n                var array_y = Math.floor(height / array_height);\n                //console.log(array_x); \n                //console.log(array_y);  \n                var temp = array[Math.floor(y/array_y)][Math.floor(x / array_x)]\n                data[pos] = 255; // Set the color to red\n                data[pos + 1] = 0;\n                data[pos + 2] = 0; \n                data[pos + 3] = parseInt(temp * 255); \n            }\n        }\n\n        ctx.putImageData(imgData, 0, 0); \n        var active_image = new Image(); \n\n        active_image.src = canvas.toDataURL(); \n        //ctx.drawImage(active_image, 0, 0); \n        document.body.appendChild(active_image); \n    }, \n    generateArrayImage(array, width, height, ctx){\n        var imgData = ctx.getImageData(0,0,width,height), // investigate get image data\n        array_width = array[0].length, \n        array_height = array.length; \n        var data = imgData.data; \n        for (var x = 0; x < width; x++){\n            for (var y = 0; y < height; y++){\n                var pos = (y * width + x) * 4; \n                var array_x = Math.floor(width / array_width); \n                var array_y = Math.floor(height / array_height);\n                //console.log(array_x); \n                //console.log(array_y);  \n                var temp = array[Math.floor(y/array_y)][Math.floor(x / array_x)]\n                data[pos] = 255; // Set the color to red\n                data[pos + 1] = 0;\n                data[pos + 2] = 0; \n                data[pos + 3] = parseInt(temp * 255); \n            }\n        }\n        return imgData; \n        //ctx.putImageData(imgData, 0, 0); \n        //var active_image = new Image(); \n    },\n    doubleImage(array, img){\n        var ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        var background = new Image();\n        var photo = new Image();\n\n        background.onload = function() {    \n            ctx.drawImage(background, 0, 0);\n            photo.src = img; \n        }\n        photo.onload = function() {\n            ctx.drawImage(photo, 0, 0);  \n        }\n\n        background.src = this.image;\n    },\n\n  },\n};\n</script>\n\n<style>\n.annotator_image_small {\n  width: auto !important;\n  height: auto !important;\n  max-height: 200px;\n  /*max-width: 400px; */\n  object-fit: scale-down; /* never rescale up */ \n}\n</style>"]}]}